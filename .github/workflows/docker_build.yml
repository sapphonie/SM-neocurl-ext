'on':
  push
#    tags:
#      - v*

jobs:
  compile:
    name: Compile extension in docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      #- name: Run the build process with Docker
      #  uses: addnab/docker-run-action@v3
      #  with:
      #    image: 'registry.gitlab.steamos.cloud/steamrt/sniper/sdk:latest'
      #    options: '-v ${{ github.workspace }}:/mnt/curl'
      #    run: |
      #      bash /mnt/curl/ci/_docker_script.sh
      #- name: Zip packages
      #  run: |
      #    pwd
      #    ls -la
      #    pushd build
      #    7za a -r sm-neocurl.zip scripting/ plugins/ extensions/
      #    ls -la
      #    pwd
      #    ls -la
      #    popd
      #
      #- name: Set Commit Hash
      #  id: commit_info
      #  run: 'echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"'

      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          ourref=""
          if ( ${{ github.ref }} ~= "refs/tags/v" ); then
            ourref=${{ github.ref }}
          else
            ourref=$(git rev-parse --short HEAD)
          fi
          echo "::set-output name=ourref::${ourref}"


      - name: Another step
        run: |
          echo "Branch: ${{ steps.vars.outputs.branch }}"
          echo "ourref: ${{ steps.vars.outputs.ourref }}"
          echo "ref: ${{ github.ref }}"
          


      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      #  with:
      #    tag_name: '${{ github.ref }}'
      #    release_name: '${{ github.ref }}'
      #    draft: false
      #    prerelease: false

              
      - name: Release
        uses: softprops/action-gh-release@v1
        
        with:
            files: |
              .gitignore

            name: ${{ steps.vars.outputs.ourref }}



      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      #   with:
      #     upload_url: '${{ steps.create_release.outputs.upload_url }}'
      #     asset_path: ./build/sm-neocurl.zip
      #     asset_name: sm-neocurl.zip
      #     asset_content_type: application/zip
      
